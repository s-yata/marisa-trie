name: Linux CI

on:
  push:
    branches: [master, develop]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake:
    name: CMake - ${{ matrix.runs-on }} - ${{ matrix.name }}

    strategy:
      matrix:
        runs-on:
          - ubuntu-22.04
          - ubuntu-latest
        include:
          - compiler: gcc
            name: GCC
            coverage: true
          - compiler: clang
            name: Clang
            coverage: false

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        if: matrix.coverage
        run: sudo apt install lcov

      - name: Setup Compiler
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Build in Release Mode
        continue-on-error: true
        run: |
          cmake -S . -B build-release -DENABLE_NATIVE_CODE=ON
          cmake --build build-release -j $(getconf _NPROCESSORS_ONLN)

      - name: Build in Debug Mode
        run: |
          cmake -S. -B build-debug \
            -DENABLE_NATIVE_CODE=ON \
            -DENABLE_ASAN=ON \
            -DENABLE_UBSAN=ON \
            -DCMAKE_CXX_CLANG_TIDY=clang-tidy \
            -DCMAKE_BUILD_TYPE=Debug \
            $([ "${{ matrix.coverage }}" = "true" ] && echo "-DENABLE_COVERAGE=ON")
          cmake --build build-debug -j $(getconf _NPROCESSORS_ONLN)

      - name: Run Tests (Debug)
        run: ctest --test-dir build-debug --output-on-failure -j $(getconf _NPROCESSORS_ONLN)

      - name: Generate Coverage Report
        if: matrix.coverage
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info

      - name: Upload Code Coverage
        if: matrix.coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.info
